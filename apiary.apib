FORMAT: 1A

# Maintenance-tracker

Maintenance Tracker App is an application that provides users with the ability to reach out to operations or repairs department regarding repair or maintenance requests and monitor the status of their request.

## Maintenance Tracker APP [/]

### Root[GET]
+ Response 200 (application/json)

        {
            "url": "/",
            "message": "Welcome to maintenance tracker application board",
            "status":"success"
        }
    
## Create a new user [/api/v1/auth/signup]
### Create a New User [POST]
Token will be generated on production when new user sign up

+ Request (application/json)

        {   "username": "cwizard2018",
            "password": "password2018",
            "firstname": "Peter",
            "lastname" : "Adeola",
            "email": "newaccount@newaccount.com"
        }

+ Response 201 (application/json)

          {
        "data": {
            "user": {
                "username": "cwizard2018",
                "email": "newaccount@newaccount.com",
                "id": "7964635f-8315-4880-8cbe-2b030da7d6bf",
                "user_role": "users",
                "fullname": "Peter Adeola"
            },
        },
        "message": "User registration successful",
        "status": "success"
        }
+ Request (application/json)

        {
                "password": "password2018",
                "firstname": "Peter",
                "lastname" : "Adeola",
                "email": "newaccount@newaccount.com"
        }
+ Response 400 (application/json)

        {
            "message": "The username field is required.",
            "status": "fail",
        }
+ Request (application/json)

        {   
                "username": "ccwizard",
                "firstname": "Peter",
                "lastname" : "Adeola",
                "email": "newaccount@newaccount.com"
        }
+ Response 400 (application/json)

        {
            "message": "The password field is required.",
            "status": "fail",
        }
+ Request (application/json)

        {   
                "username": "ccwizard",
                "password": "ggg"
                "firstname": "Peter",
                "lastname" : "Adeola",
                "email": "newaccount@newaccount.com"
        }
+ Response 400 (application/json)

        {
            "message": "The password must be at least 8 characters.",
            "status": "fail",
        }
+ Request (application/json)

        {   
                "username": "ccwizard",
                "password": "gggfd34510j"
                "firstname": "Pe",
                "lastname" : "Adeola",
                "email": "newaccount@newaccount.com"
        }
+ Response 400 (application/json)

        {
            "message": "The firstname must be at least 5 characters.",
            "status": "fail",
        }
+ Request (application/json)

        {   
                "username": "ccwizard",
                "password": "gggfd34510j"
                "firstname": "Peter",
                "lastname" : "Ade",
                "email": "newaccount@newaccount.com"
        }
+ Response 400 (application/json)

        {
            "message": "The lastname must be at least 5 characters.",
            "status": "fail",
        }
+ Request (application/json)

        {   
                "username": "ccwizard",
                "password": "septem1234"
                "lastname" : "Adeola",
                "email": "newaccount@newaccount.com"
        }
        
+ Request (application/json)

        {   
                "username": "ccwizard",
                "password": "gggfd34510j"
                "firstname": "PeterAdeolaOlawale",
                "lastname" : "Adeola",
                "email": "newaccount@newaccount.com"
        }
+ Response 400 (application/json)

        {
            "message": "The firstname may not be greater than 10 characters.",
            "status": "fail",
        }
        
+ Request (application/json)

        {   
                "username": "ccwizard",
                "password": "gggfd34510j"
                "firstname": "Peter",
                "lastname" : "AdeolaPeterAdoye",
                "email": "newaccount@newaccount.com"
        }
+ Response 400 (application/json)

        {
            "message": "The lastname may not be greater than 10 characters.",
            "status": "fail",
        }
+ Response 400 (application/json)

        {
            "message": "The firstname field is required.",
            "status": "fail",
        }
+ Request (application/json)

        {   
                "username": "ccwizard",
                "password": "septem1234"
                "firstname" : "Adeola",
                "email": "newaccount@newaccount.com"
        }
+ Response 400 (application/json)

        {
            "message": "The lastname field is required.",
            "status": "fail",
        }
+ Request (application/json)

        {   
                "username": "ccwizard",
                "password": "septem1234"
                "firstname" : "AdeolaPeterOluwadarasimikanmisolaAjayi",
                "lastname": "Adeoye"
                "email": "newaccount@newaccount.com"
        }
+ Response 400 (application/json)

        {
            "message": "The firstname may not be greater than 10 characters",
            "status": "fail",
        }
+ Request (application/json)

        {   
                "username": "ccwizard",
                "password": "septem1234"
                "firstname" : "Adeola",
                "lastname": "AdeoyePeterOluwadarasimikanmisolaAjayi"
                "email": "newaccount@newaccount.com"
        }
+ Response 400 (application/json)

        {
            "message": "The lastname may not be greater than 10 characters",
            "status": "fail",
        }
+ Request (application/json)

        {   
                "username": "ccwizard",
                "password": "septem1234"
                "firstname" : "Adeola",
                "lastname": "Peter123"
                "email": "newaccount@newaccount.com"
        }
+ Response 400 (application/json)

        {
            "message": "The lastname field must contain only alphabetic characters.",
            "status": "fail",
        }
+ Request (application/json)

        {   
                "username": "ccwizard",
                "password": "septem1234"
                "firstname" : "Adeola123",
                "lastname": "Peter"
                "email": "newaccount@newaccount.com"
        }
+ Response 400 (application/json)

        {
            "message": "The firstname field must contain only alphabetic characters.",
            "status": "fail",
        }
+ Request (application/json)

        {   
                "username": "ccwizard",
                "password": "septem1234"
                "firstname" : "Adeola",
                "lastname": "Peter"
        }
+ Response 400 (application/json)

        {
            "message": "The email field is required.",
            "status": "fail",
        }
+ Request (application/json)

        {   
                "username": "ccwizard",
                "password": "septem1234"
                "firstname" : "Adeola",
                "lastname": "Peter",
                "email": "invalid@invalid"
        }
+ Response 400 (application/json)

        {
            "message": "The email format is invalid.",
            "status": "fail",
        }
+ Request (application/json)

        {   
                "username": "cwizard2018",
                "password": "septem1234"
                "firstname" : "Adeola",
                "lastname": "Peter",
                "email": "invalid@invalid"
        }
+ Response 409 (application/json)

        {
            "message": "Username or email has already been registered, please change your email or username, or login with your password",
            "status": "fail",
        }
+ Request (application/json)

        {   
                "username": "cwizard2019",
                "password": "septem1234"
                "firstname" : "Adeola",
                "lastname": "Peter",
                "email": "newaccount@newaccount.com"
        }
+ Response 409 (application/json)

        {
            "message": "Username or email has already been registered, please change your email or username, or login with your password",
            "status": "fail",
        }
## Login a user [/api/v1/auth/login]
### Post a user login [POST]
Token will be generated on production to access all route when users sign in

+ Request (application/json)

        {   
            "username": "cwizard2018",
            "password": "password2018",
        }

+ Response 200 (application/json)

        {
        "data": {
                "username": "cwizard2018",
                "password": "password2018"
            },
            "message": "You are now logged in",
            "status": "success"
        }
+ Request (application/json)

        {   
            "username": "cwizard2018"
        }

+ Response 400 (application/json)

        {
            "message": "The password field is required.",
            "status": "fail"
        }
+ Request (application/json)

        {   
            "password": "password2018"
        }

+ Response 400 (application/json)

        {
            "message": "The username field is required.",
            "status": "fail"
        }
+ Request (application/json)

        {   
            "username": "invalid1"
            "password": "password2018"
        }

+ Response 401 (application/json)

        {
            "message": "Username or password incorrect, please provide valid credential",
            "status": "fail"
        }
+ Request (application/json)

        {   
            "username": "cwizard2018"
            "password": "invalid1"
        }

+ Response 401 (application/json)

        {
            "message": "Username or password incorrect, try again",
            "status": "fail"
        }
               
## Get all user requests [/api/v1/users/requests]

### List All Requests [GET]
Users are to supply token in the header of the request in production
+ Response 200 (application/json)

        {
        "data": [
            {
                "request_id": "0ce529f4-8854-41ec-b67c-fbcb4e716e42",
                "user_id": "48a698a0-1641-5aca-bc1b-de9b1a482ee1",
                "title": "request1",
                "currentstatus": "pending",
                "details": "new test request",
                "created_at": "2018-05-29 21:06:33 +0000"
            },
            {
                "request_id": "0ce529f4-8854-41ec-b67c-fbcb4e716e45",
                "user_id": "48a698a0-1641-5aca-bc1b-de9b1a482ee1",
                "title": "request5",
                "currentstatus": "approved",
                "details": "new test request",
                "created_at": "2018-05-29 21:08:33 +0000"
            },
            {
                "request_id": "0ce529f4-8854-41ec-b67c-fbcb4e716e43",
                "user_id": "48a698a0-1641-5aca-bc1b-de9b1a482ee1",
                "title": "request2",
                "currentstatus": "rejected",
                "details": "new test request",
                "created_at": "2018-05-29 21:09:33 +0000",
            },
        ],
        "message": "Requests successfully retrieved from the database",
        "status": "success"
        }
+ Response 200 (application/json)

        {
            "message": "No request for this user",
            "status": "success",
        }
+ Response 401 (application/json)

        {
            "message": "Please login with your username and password",
            "status": "fail",
        }

## GET request by Id [/api/v1/users/requests/0ce529f4-8854-41ec-b67c-fbcb4e716e43]

### Get a request [GET]
To get a request belonging to a user using the request Id on production, you have to supply your login token in the header

+ Response 200 (application/json)

        {
        "data":
            {
                "request_id": "0ce529f4-8854-41ec-b67c-fbcb4e716e43",
                "user_id": "48a698a0-1641-5aca-bc1b-de9b1a482ee1",
                "title": "request2",
                "currentstatus": "rejected",
                "details": "new test request",
                "created_at": "2018-05-29 21:06:33 +0000"
            },
        "message": "One request successfully retrieved from the database",
        "status": "success"
        }
+ Response 400 (application/json)

            {
                "message": "Invalid Id, please provide a valid uuid",
                "status": "fail",
            }
+ Response 404 (application/json)

            {
                "message": "You can't get a request that does not belong to you",
                "status": "fail",
            }
+ Response 401 (application/json)

            {
                "message": "Please login with your username and password",
                "status": "fail",
            }
            
## Edit a pending request [/api/v1/users/requests/0ce529f4-8854-41ec-b67c-fbcb4e716e42]

### PUT a request [PUT]
To edit a pending request, the request must belong to the user and the user must supply the token in the header

+ Request (application/json)

        {
            "title" : "Just edited this request in Apiary",
        }
        
+ Response 200 (application/json)

            {
                "data": {
                    "request_id": "0ce529f4-8854-41ec-b67c-fbcb4e716e42",
                    "user_id": "48a698a0-1641-5aca-bc1b-de9b1a482ee1",
                    "title" : "Just edited this request in Apiary",
                    "currentstatus": "pending",
                    "details" : "Newly edited request",
                    "created_at": "2018-05-29 21:06:33 +0000"
                },
                "message": "Request successfully updated",
                "status": "success"
            }
+ Response 401 (application/json)

            {
                "message": "You can't edit a request that is not yours",
                "status": "fail",
            }

+ Request (application/json)

        {
            "title": "This title will be long. Then it will become longer. Oh it it becoming longer. It is growing longer, long, longer, longest. It is about to reach the limit, but not yet. Oh my God, It has reached the limit",
        }
        
+ Response 400 (application/json)

        {
            "message": "The title may not be greater than 30 characters.",
            "status": "fail",
        }
+ Request (application/json)

        {
            "details" : "This details will be long. Then it will become longer. Oh it it becoming longer. It is growing longer, long, longer, longest. It is about to reach the limit, but not yet. Oh my God, It has reached the limit",
        }
+ Response 400 (application/json)

        {
            "message": "The details may not be greater than 150 characters.",
            "status": "fail",
        }
+ Response 403 (application/json)

            {
                "message": "Admin has already looked into this request, Please check the current status of the request",
                "status": "fail",
            }
## Create a new request [/api/v1/users/requests/]

### Create a New Request [POST]
To create a new request, the user must supply login token in the header of the request and supply request title and details, request Id, current status and user Id will be automatically generated in the real api, but I have to supply request id here for documentation purpose
+ Request (application/json)

        {
            "title": "New request from apiary",
            "details" : "API blueprint request",
        }

+ Response 201 (application/json)

        {
            "data": {
                "request": {
                        "request_id": "0ce529f4-8854-41ec-b67c-fbcb4e716e49",
                        "user_id": "48a698a0-1641-5aca-bc1b-de9b1a482ee1",
                        "title" : "New request from apiary",
                        "details" : "API blueprint request",
                        "currentstatus": "pending",
                        "created_at": "2018-05-29 21:06:33 +0000"
                    }
            },
            "message": "Request created successfully",
            "status": "success"
        }
+ Request (application/json)

        {
            "title": "This title will be long. Then it will become longer. Oh it it becoming longer. It is growing longer, long, longer, longest. It is about to reach the limit, but not yet. Oh my God, It has reached the limit",
            "details" : "API blueprint request here and details cannot be less than 30 characters and more than 150",
        }
        
+ Response 400 (application/json)

        {
            "message": "The title may not be greater than 30 characters.",
            "status": "fail",
        }
        
+ Request (application/json)

        {
            "details" : "New request for posting, I just have to make this details longer"
        }
+ Response 400 (application/json)

        {
            "message": "The title field is required.",
            "status": "fail",
        }
+ Request (application/json)

        {
            "title" : "A new request",
        }
+ Response 400 (application/json)

        {
            "message": "The details field is required.",
            "status": "fail",
        }
+ Request (application/json)

        {
            "title": "New request from apiary",
            "details" : "This details will be long. Then it will become longer. Oh it it becoming longer. It is growing longer, long, longer, longest. It is about to reach the limit, but not yet. Oh my God, It has reached the limit",
        }
+ Response 400 (application/json)

        {
            "message": "The details may not be greater than 150 characters.",
            "status": "fail",
        }

+ Request (application/json)

        {
            "title": "New request from administrator",
            "details" : "API blueprint request here> Its so funny that an admin wants to also create request of requests",
        }
+ Response 403 (application/json)

        {
            "message": "Administrators are not allowed to create request",
            "status": "fail",
        }

+ Request (application/json)

        {
            "title": "New request from apiary",
            "details" : "API blueprint request. This is a recurring request",
        }
+ Response 409 (application/json)

        {
            "message": "This request has already been logged, Please log a new request",
            "status": "fail",
        }
 
## Admin get all users requests [/api/v1/requests]

### List all users requests [GET]
+ Response 200 (application/json)

        {
        "data": [
            {
            "user_id": "48a698a0-1641-5aca-bc1b-de9b1a482ee1",
            "firstname": "Juliet",
            "lastname": "Samuel",
            "email": "sjuliet07@gmail.com",
            "request_id": "0ce529f4-8854-41ec-b67c-fbcb4e716e49",
            "title": "request1",
            "details": "new test request",
            "currentstatus": "pending",
            "created_at": "2018-05-29 21:06:33 +0000"
            },
            {
                "user_id": "48a698a0-1641-5aca-bc1b-de9b1a482ee1",
                "firstname": "Juliet",
                "lastname": "Samuel",
                "email": "sjuliet07@gmail.com",
                "request_id": "0ce529f4-8854-41ec-b67c-fbcb4e716e45",
                "title": "request5",
                "details": "new test request",
                "currentstatus": "approved",
                "created_at": "2018-05-29 21:07:33 +0000"
            },
            {
                "user_id": "48a698a0-1641-5aca-bc1b-de9b1a482ee1",
                "firstname": "Juliet",
                "lastname": "Samuel",
                "email": "sjuliet07@gmail.com",
                "request_id": "0ce529f4-8854-41ec-b67c-fbcb4e716e43",
                "title": "request2",
                "details": "new test request",
                "currentstatus": "rejected",
                "created_at": "2018-05-29 21:09:33 +0000"
            },
        ],
        "message": "All requests successfully retrieved",
        "status": "success"
        }
+ Response 401 (application/json)

        {
            "message": "Please login with your username and password",
            "status": "fail",
        }
+ Response 403 (application/json)

        {
            "message": "You are not authorized to access this resources",
            "status": "fail",
        }
        
## Admin approve a pending request [/api/v1/requests/0ce529f4-8854-41ec-b67c-fbcb4e716e49/approve]

### Approve a pending request [PUT]
+ Response 200 (application/json)

        {
          "data": {
            "user_id": "48a698a0-1641-5aca-bc1b-de9b1a482ee1",
            "firstname": "Juliet",
            "lastname": "Samuel",
            "email": "sjuliet07@gmail.com",
            "request_id": "0ce529f4-8854-41ec-b67c-fbcb4e716e49",
            "title": "request1",
            "details": "new test request",
            "currentstatus": "approved",
            "created_at": "2018-05-29 21:06:33 +0000"
          },
          "message": "Request has been approved",
          "status": "success",
        }
+ Response 400 (application/json)

        {
            "message": "Invalid Id, please provide a valid uuid",
            "status": "fail",
        }
+ Response 401 (application/json)

        {
            "message": "Please login with your username and password",
            "status": "fail",
        }
+ Response 403 (application/json)

        {
            "message": "You are not authorized to access this resources",
            "status": "fail",
        }
+ Response 403 (application/json)

        {
            "message": "The status of this request has been changed, you can't approve or disapprove again, please check the status",
            "status": "fail",
        }
        
## Admin reject a pending request [/api/v1/requests/0ce529f4-8854-41ec-b67c-fbcb4e716e49/disapprove]

### Reject a pending request [PUT]
+ Response 200 (application/json)

        {
          "data": {
            "user_id": "48a698a0-1641-5aca-bc1b-de9b1a482ee1",
            "firstname": "Juliet",
            "lastname": "Samuel",
            "email": "sjuliet07@gmail.com",
            "request_id": "0ce529f4-8854-41ec-b67c-fbcb4e716e49",
            "title": "request1",
            "details": "new test request",
            "currentstatus": "rejected",
            "created_at": "2018-05-29 21:09:33 +0000"
          },
          "message": "Request has been successfully rejected",
          "status": "success",
        }
+ Response 400 (application/json)

        {
            "message": "Invalid Id, please provide a valid uuid",
            "status": "fail",
        }
+ Response 401 (application/json)

        {
            "message": "Please login with your username and password",
            "status": "fail",
        }
+ Response 403 (application/json)

        {
            "message": "You are not authorized to access this resources",
            "status": "fail",
        }
+ Response 403 (application/json)

        {
            "message": "The status of this request has been changed, you can't approve or disapprove again, please check the status",
            "status": "fail",
        }

## Admin resolve an approved request [/api/v1/requests/0ce529f4-8854-41ec-b67c-fbcb4e716e45/resolve]

### Resolve an approved request [PUT]
+ Response 200 (application/json)

        {
            "data": {
            {
            "user_id": "48a698a0-1641-5aca-bc1b-de9b1a482ee1",
            "firstname": "Juliet",
            "lastname": "Samuel",
            "email": "sjuliet07@gmail.com",
            "request_id": "0ce529f4-8854-41ec-b67c-fbcb4e716e45",
            "title": "request5",
            "details": "new test request",
            "currentstatus": "resolved",
            "created_at": "2018-05-29 21:10:33 +0000"
            },
          },
          "message": "Request has been successfully resolved",
          "status": "success",
        }

+ Response 400 (application/json)

        {
            "message": "Invalid Id, please provide a valid uuid",
            "status": "fail",
        }
+ Response 401 (application/json)

        {
            "message": "Please login with your username and password",
            "status": "fail",
        }
+ Response 403 (application/json)

        {
            "message": "You are not authorized to access this resources",
            "status": "fail",
        }
+ Response 403 (application/json)

        {
            "message": "This request has not been approved, Please check the current status of the request",
            "status": "fail",
        }